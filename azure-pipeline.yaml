trigger:
  - master

pool:
  name: wsl

steps:

  ## TERRAFORM
  - script: terraform init
    displayName:  Terraform init
    workingDirectory: $(Build.SourcesDirectory)/terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)

  - script: terraform plan
    displayName:  Terraform plan
    workingDirectory: $(Build.SourcesDirectory)/terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)

  - script: terraform apply -auto-approve
    displayName:  Terraform apply
    workingDirectory: $(Build.SourcesDirectory)/terraform
    env:
      ARM_CLIENT_ID: $(ARM_CLIENT_ID)
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
      ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      ARM_TENANT_ID: $(ARM_TENANT_ID)

  ## ANSIBLE - venv
  - script: 
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip
      pip install -r requirements-azure.txt
      pip install ansible[azure]==2.8.6
    displayName: Get requirements
    workingDirectory: $(Build.SourcesDirectory)/ansible

  ## ANSIBLE - run
  - script: 
      source venv/bin/activate
      ansible-playbook playbookdemo.yml -i inv.azure_rm.yml
    displayName: Ansible playbook
    workingDirectory: $(Build.SourcesDirectory)/ansible
    env:
      AZURE_CLIENT_ID: $(ARM_CLIENT_ID)
      AZURE_SECRET: $(ARM_CLIENT_SECRET)
      AZURE_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
      AZURE_TENANT: $(ARM_TENANT_ID)
      ANSIBLE_HOST_KEY_CHECKING: False
